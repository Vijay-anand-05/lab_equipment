# Generated by Django 5.1.6 on 2025-03-11 05:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "dept_code",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("department", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "application_departments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "student_regno",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("student_dob", models.DateField(blank=True, null=True)),
                (
                    "student_password",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "core_student",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Student_cgpa",
            fields=[
                (
                    "reg_no",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("batch", models.CharField(max_length=100)),
                ("student_name", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=100)),
                ("section", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Male", "Male"), ("Female", "Female")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("cgpa", models.FloatField()),
                ("sslc", models.FloatField()),
                ("hsc", models.CharField(blank=True, max_length=20, null=True)),
                ("diploma", models.CharField(blank=True, max_length=20, null=True)),
                ("bag_of_log", models.IntegerField()),
                ("history_of_arrear", models.IntegerField()),
                (
                    "admission_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "contact_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("semester1", models.CharField(blank=True, max_length=20, null=True)),
                ("semester2", models.CharField(blank=True, max_length=20, null=True)),
                ("semester3", models.CharField(blank=True, max_length=20, null=True)),
                ("semester4", models.CharField(blank=True, max_length=20, null=True)),
                ("semester5", models.CharField(blank=True, max_length=20, null=True)),
                ("semester6", models.CharField(blank=True, max_length=20, null=True)),
                ("semester7", models.CharField(blank=True, max_length=20, null=True)),
                ("semester8", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "application_student",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=100)),
                ("user_name", models.CharField(max_length=100)),
                ("staff_id", models.CharField(max_length=100)),
                ("Department", models.CharField(max_length=100)),
                ("Department_code", models.CharField(max_length=100)),
                ("email", models.CharField(max_length=100)),
                ("role", models.CharField(max_length=100)),
                (
                    "default_role",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("Password", models.CharField(max_length=100)),
                ("confirm_Password", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "application_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Apparatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ex_no", models.CharField(max_length=50)),
                ("course_code", models.CharField(max_length=50)),
                ("practical_course", models.CharField(max_length=255)),
                ("experiment_name", models.CharField(max_length=255)),
                ("regulation", models.CharField(max_length=50)),
                ("batch", models.CharField(max_length=50)),
                ("semester", models.IntegerField()),
                ("apparatus_name", models.CharField(max_length=255)),
                (
                    "range_specification",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("quantity_available", models.CharField(max_length=10)),
                ("department", models.CharField(max_length=50)),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "fine_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "equipment_apparatus",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "db_table": "category_table",
            },
        ),
        migrations.CreateModel(
            name="LabExercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Ex_no", models.CharField(max_length=50)),
                ("practical_course", models.CharField(max_length=255)),
                ("course_code", models.CharField(max_length=10)),
                ("Ex_title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("regulations", models.CharField(max_length=50)),
                ("batch", models.CharField(max_length=50)),
                ("sem", models.IntegerField()),
                ("department", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="regulation_master",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("regulation_year", models.IntegerField()),
                ("regulation_name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="SubjectType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type_name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "db_table": "subject_type_table",
            },
        ),
        migrations.CreateModel(
            name="ApparatusRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "fine_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "technician_staff_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[("Request", "Request"), ("Return", "Return")],
                        default="Request",
                        max_length=10,
                    ),
                ),
                ("request_date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                            ("Returned", "Returned"),
                            ("Damaged", "Damaged"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("technician_remarks", models.TextField(blank=True, null=True)),
                ("accepted_message", models.TextField(blank=True, null=True)),
                ("return_date", models.DateTimeField(blank=True, null=True)),
                ("hod_approval", models.BooleanField(default=False)),
                ("course_code", models.CharField(blank=True, max_length=20, null=True)),
                ("verified", models.BooleanField(default=False)),
                ("verified_date", models.DateTimeField(blank=True, null=True)),
                (
                    "apparatus",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.apparatus",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.student_cgpa",
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="equipment.user",
                    ),
                ),
            ],
            options={
                "db_table": "apparatus_request",
                "ordering": ["-request_date"],
            },
        ),
        migrations.CreateModel(
            name="ApparatusRequestDamage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fine_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "apparatus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.apparatus",
                    ),
                ),
                (
                    "apparatus_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.apparatusrequest",
                    ),
                ),
            ],
            options={
                "db_table": "apparatus_request_damage",
            },
        ),
        migrations.AddField(
            model_name="apparatusrequest",
            name="damaged_apparatus",
            field=models.ManyToManyField(
                blank=True,
                related_name="damaged_requests",
                through="equipment.ApparatusRequestDamage",
                to="equipment.apparatus",
            ),
        ),
        migrations.CreateModel(
            name="LabBatchAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lab_batch_no", models.CharField(max_length=50)),
                ("course_code", models.CharField(max_length=10)),
                ("ex_no", models.CharField(max_length=50)),
                ("assessment", models.CharField(blank=True, max_length=100, null=True)),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                ("section", models.CharField(blank=True, max_length=10, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_assignments",
                        to="equipment.student_cgpa",
                    ),
                ),
            ],
            options={
                "db_table": "lab_batch_assignment",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="apparatusrequest",
            name="lab_batch",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="equipment.labbatchassignment",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_proof",
                    models.ImageField(
                        blank=True, null=True, upload_to="payment_proofs/"
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "damaged_apparatus",
                    models.ManyToManyField(
                        blank=True,
                        related_name="damage_payments",
                        to="equipment.apparatusrequestdamage",
                    ),
                ),
                (
                    "lab_batch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batch_payments",
                        to="equipment.labbatchassignment",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="equipment.student_cgpa",
                    ),
                ),
            ],
            options={
                "db_table": "payment_upload",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("batch", models.CharField(max_length=50)),
                ("regulations", models.CharField(max_length=20)),
                ("department", models.CharField(max_length=50)),
                ("semester", models.IntegerField()),
                ("course_code", models.CharField(max_length=10, unique=True)),
                ("course_title", models.CharField(max_length=255)),
                ("lecturer", models.IntegerField()),
                ("tutorial", models.IntegerField()),
                ("practical", models.IntegerField()),
                ("total_contact_periods", models.IntegerField()),
                ("credits", models.IntegerField()),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.category",
                    ),
                ),
                (
                    "subject_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.subjecttype",
                    ),
                ),
            ],
            options={
                "db_table": "course",
            },
        ),
    ]
